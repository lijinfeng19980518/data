% % 数据
% Delta_actual = [8	2	12	22	32	42;
% 12	2	8	18	28	38;
% 6	4	14	24	34	44;
% 8	18	28	38	48	58;
% 8	2	12	22	32	42;
% 28	38	48	58	68	78;
% 18	28	38	48	58	68;
% 28	18	8	2	12	22;
% 42	32	22	12	2	8;
% 4	14	24	34	44	54;
% 28	18	8	2	12	22;
% 24	34	44	54	64	74;
% 4	14	24	34	44	54;
% 142	152	162	172	182	192;
% 180	190	200	210	220	230;
% 148	158	168	178	188	198;
% 142	152	162	172	182	192;
% 24	14	4	6	16	26;
% 8	2	12	22	32	42;
% 158	168	178	188	198	208;
% 168	178	188	198	208	218;
% 136	146	156	166	176	186;
% 172	182	192	202	212	222;
% 12	22	32	42	52	62;
% 8	18	28	38	48	58;
% 64	54	44	34	24	14;
% 18	28	38	48	58	68;
% 58	48	38	28	18	8;
% 6	16	26	36	46	56;
% 44	34	24	14	4	6;
% 44	34	24	14	4	6;
% 38	48	58	68	78	88;
% 22	32	42	52	62	72;
% 54	64	74	84	94	104]; % 实际结果 34行6列
% Delta_model = [0	10	30	14	30	8;
% 4	0	20	8	8	34;
% 4	14	8	8	8	6;
% 14	4	8	8	14	60;
% 4	24	24	28	28	28;
% 0	14	4	8	18	12;
% 0	0	4	4	8	16;
% 4	14	8	2	6	28;
% 10	8	10	8	14	8;
% 0	10	18	30	8	2;
% 10	10	10	8	14	18;
% 4	10	30	4	14	12;
% 10	4	30	8	12	40;
% 32	42	62	136	194	172;
% 32	58	72	130	144	230;
% 32	42	132	162	192	218;
% 48	42	110	168	146	192;
% 0	18	4	38	30	8;
% 10	30	4	4	8	8;
% 32	42	84	158	178	250;
% 32	42	84	126	144	208;
% 32	122	168	142	202	176;
% 32	94	52	178	188	186;
% 8	24	18	8	28	8;
% 14	4	30	38	8	28;
% 0	4	8	8	8	2;
% 14	8	22	12	22	48;
% 0	10	8	14	2	34;
% 4	8	20	8	14	24;
% 16	6	16	26	56	46;
% 36	46	56	66	76	86;
% 38	32	26	4	14	24;
% 38	48	26	4	62	24;
% 38	48	26	4	14	8]; % 模型结果 34行6列
% 数据
Delta_actual = [0	12	25	37	50	62;
6	18	31	43	56	68;
20	8	5	17	30	42;
0	12	25	37	50	62;
10	22	35	47	60	72;
6	6	19	31	44	56;
16	4	9	21	34	46;
46	34	21	9	4	16;
24	12	1	13	26	38;
20	8	5	17	30	42;
10	2	15	27	40	52;
10	2	15	27	40	52;
140	152	165	177	190	202;
140	152	165	177	190	202;
198	210	223	235	248	260;
156	168	181	193	206	218;
160	172	185	197	210	222;
26	14	1	11	24	36;
160	172	185	197	210	222;
144	156	169	181	194	206;
170	182	195	207	220	232;
154	166	179	191	204	216;
180	192	205	217	230	242;
30	42	55	67	80	92;
26	14	1	11	24	36;
66	54	41	29	16	4;
0	12	25	37	50	62;
60	48	35	23	10	2;
24	36	49	61	74	86;
46	34	21	9	4	16;
80	68	55	43	30	18;
56	68	81	93	106	118;
40	52	65	77	90	102;
72	84	97	109	122	134]; % 实际结果 34行6列
Delta_model = [8	8	11	19	22	38;
6	18	11	3	36	58;
8	14	5	3	30	16;
2	30	5	3	0	2;
28	30	11	13	4	26;
18	10	7	7	0	18;
18	10	11	13	56	70;
6	30	1	1	6	12;
2	30	1	7	0	16;
8	4	1	35	0	12;
8	8	11	1	6	2;
18	4	1	1	4	6;
30	110	91	161	160	134;
30	90	177	125	148	214;
62	190	167	157	222	234;
30	10	119	189	164	218;
30	52	139	187	126	186;
6	14	5	1	26	6;
50	10	119	135	180	192;
14	10	135	167	170	202;
94	10	129	183	248	218;
98	126	139	151	252	192;
14	26	139	151	126	238;
2	14	9	13	10	6;
8	40	1	3	26	6;
8	40	11	13	0	28;
0	8	5	33	50	62;
18	14	1	3	6	28;
8	8	11	7	0	18;
14	6	19	51	84	96;
20	32	45	57	70	82;
8	36	1	29	138	102;
8	20	1	13	10	22;
8	36	1	13	10	38]; % 模型结果 34行6列
% eta_values = 670:10:720;         % \(\hat{\eta}\)的取值
eta_values = [838	850	863	875	888	900];
P = 34;                         % 人员数量

% 创建图形窗口
figure('Position', [100, 100, 1200, 900]);

% 遍历每组 \(\hat{\eta}\) 画子图
for k = 1:length(eta_values)
    subplot(2, 3, k); % 创建3x3子图布局
    
    % 提取当前\(\hat{\eta}\)下的实际值和模型值
    actual = Delta_actual(:, k);
    model = Delta_model(:, k);
    
    % 计算实际值和模型值的求和
    sum_actual = sum(actual); % 实际值求和
    sum_model = sum(model);  % 模型值求和
    
    % 绘制柱状图
    barh(1:P, -actual, 'FaceColor', [0.2, 0.6, 1], 'EdgeColor', 'none'); % 实际值（左）
    hold on;
    barh(1:P, model, 'FaceColor', [1, 0.4, 0.4], 'EdgeColor', 'none');  % 模型值（右）
    hold off;
    
    % 设置图表标题和刻度
    title(['$\hat{\eta} = ', num2str(eta_values(k)), '$'], 'FontSize', 12, 'Interpreter', 'latex');
    xlabel('\Delta_p', 'FontSize', 10);
    ylabel('Personnel', 'FontSize', 10);
    set(gca, 'YTick', 1:P, 'YDir', 'reverse'); % Y轴反转，人员从上到下排列
    grid on;
    xlim([-max(max(Delta_actual)) - 5, max(max(Delta_model)) + 5]); % 根据最大值设置范围
    ylim([0.5, 34.5]);
    
    % 获取当前横轴刻度
    xticks = get(gca, 'XTick'); % 获取横轴刻度值
    % 替换刻度标签为绝对值
    set(gca, 'XTickLabel', abs(xticks));
    
%     % 在图左下角显示实际值的求和
%     text(-max(max(Delta_actual)) - 20, 1, ['Sum=', num2str(sum_actual)], ...
%         'HorizontalAlignment', 'left', 'VerticalAlignment', 'bottom', ...
%         'FontSize', 10, 'Color', [0.2, 0.6, 1]);
%     
%     % 在图右下角显示模型值的求和
%     text(max(max(Delta_model)) + 20, 1, ['Sum=', num2str(sum_model)], ...
%         'HorizontalAlignment', 'right', 'VerticalAlignment', 'bottom', ...
%         'FontSize', 10, 'Color', [1, 0.4, 0.4]);
% 在图左下角显示实际值的求和
    text(-200, 5, ['Sum=', num2str(sum_actual)], ...
        'HorizontalAlignment', 'left', 'VerticalAlignment', 'bottom', ...
        'FontSize', 10, 'Color', [0.2, 0.6, 1]);
    
    % 在图右下角显示模型值的求和
    text(200, 5, ['Sum=', num2str(sum_model)], ...
        'HorizontalAlignment', 'right', 'VerticalAlignment', 'bottom', ...
        'FontSize', 10, 'Color', [1, 0.4, 0.4]);
end